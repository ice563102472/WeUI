<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--  AutoGenerated by lindzh  2016年12月15日 16:55 -->
<mapper namespace="com.linda.rpc.webui.dao.ServiceInfoDao">

	<resultMap id="ServiceInfoResultMap" type="com.linda.rpc.webui.pojo.ServiceInfo">
		<id property="id" column="id"/>
		<result property="name" column="service_name"/>
		<result property="version" column="service_version"/>
		<result property="group" column="service_group"/>
		<result property="impl" column="service_impl"/>
		<result property="appId" column="app_id"/>
		<result property="status" column="service_status"/>
		<result property="providerCount" column="provider_count"/>
		<result property="consumerCount" column="consumer_count"/>
	</resultMap>
	
	<insert id="addServiceInfo" useGeneratedKeys="true" keyProperty="id" parameterType="com.linda.rpc.webui.pojo.ServiceInfo">
		insert into service_info(service_name,service_version,service_group,service_impl,app_id,service_status,provider_count,consumer_count)
		 values(#{name},#{version},#{group},#{impl},#{appId},#{status},#{providerCount},#{consumerCount})
	</insert>
	
	<select id="getById" resultMap="ServiceInfoResultMap">
		select * from service_info where id=#{id}
	</select>
	
	<update id="updateById" parameterType="com.linda.rpc.webui.pojo.ServiceInfo">
		update service_info set service_name=#{obj.name},service_version=#{obj.version},service_group=#{obj.group},service_impl=#{obj.impl},
		app_id=#{obj.appId},service_status=#{obj.status},provider_count=#{obj.providerCount},consumer_count=#{obj.consumerCount} where id=#{obj.id}
	</update>
	
	<delete id="deleteById">
		delete from service_info where id=#{id}
	</delete>
	

	<select id="getListByNameAndAppId" resultMap="ServiceInfoResultMap">
		select * from service_info
		<if test="(name!=null)||(appId>0)">
			where
			<if test="name!=null">
				service_name like #{name}
			</if>
			<if test="appId&gt;0">
				<if test="name!=null">
					and
				</if>
				app_id=#{appId}
			</if>
		</if>
		order by id desc limit #{limit} offset #{offset}
	</select>
	
	<select id="getCountByNameAndAppId" resultType="long">
		select count(*) from service_info
		<if test="(name!=null)||(appId>0)">
			where
			<if test="name!=null">
				service_name like #{name}
			</if>
			<if test="appId&gt;0">
				<if test="name!=null">
					and
				</if>
				app_id=#{appId}
			</if>
		</if>
	</select>
	
	
	<select id="getListByAppIdAndStatus" resultMap="ServiceInfoResultMap">
		select * from service_info where
		app_id=#{appId}
		<if test="status&gt;-1">
			and service_status=#{status}
		</if>
		order by id desc limit #{limit} offset #{offset}
	</select>
	
	<select id="getCountByAppIdAndStatus" resultType="long">
		select count(*) from service_info where 
		app_id=#{appId}
		<if test="status&gt;-1">
			and service_status=#{status}
		</if>
	</select>
	
	<select id="getByAppIdGroupNameVersion" resultMap="ServiceInfoResultMap">
		select * from service_info where
		app_id=#{appId} and service_group=#{group} and service_name=#{name} and service_version=#{version}
	</select>

	<update id="updateConsumerCount">
		update service_info as s set s.consumer_count = (select count(1) from service_consumer_info where service_id = s.id)
	</update>

	<update id="updateProviderCount">
		update service_info as s set s.provider_count = (select count(1) from service_provider_info where service_id = s.id)
	</update>

	<update id="updateServiceStatus">
		update service_info as s
		set s.service_status =
		(select case when count(1)>0 then 1 else 0 end as stat from service_provider_info where service_id = s.id)
	</update>

	<select id="getConsumeServicesByAppId" resultMap="ServiceInfoResultMap">
		select * from service_info where id in(select distinct(service_id) from service_consumer_info where consumer_app_id=#{appId})
	</select>

	<select id="getProvideServicesByHostId" resultMap="ServiceInfoResultMap">
		select * from service_info where id in(select distinct(service_id) from service_provider_info where host_id=#{hostId})
	</select>


	<select id="getConsumeServicesByHostId" resultMap="ServiceInfoResultMap">
		select * from service_info where id in(select distinct(service_id) from service_consumer_info where consumer_host_id=#{hostId})
	</select>

	<select id="getListByProviderAndConsumerApp" resultMap="ServiceInfoResultMap">
		select * from service_info
		where id in(select distinct(service_id) from service_consumer_info where service_app_id=#{providerAppId} and consumer_app_id=#{consumerAppId})
	</select>
</mapper>